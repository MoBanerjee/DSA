class Solution {
    public boolean isAnagram(String s, String t) {
        int n=s.length();
        int m=t.length();
        if(n!=m)return false;
        char[] s1=s.toCharArray();
        char[] t1=t.toCharArray();
        Arrays.sort(s1);
        Arrays.sort(t1);
        for(int i=0;i<n;i++){
            if(s1[i]!=t1[i])return false;
        }
        return true;
    }
}

class Solution {
    public boolean isAnagram(String s, String t) {
        int n=s.length();
        int m=t.length();
        if(n!=m)return false;
HashMap<Character,Integer> hm= new HashMap<>();

for(int i=0;i<n;i++){
    char it=s.charAt(i);
    if(hm.get(it)==null)hm.put(it,1);
    else hm.put(it,hm.get(it)+1);

}
for(int j=0;j<n;j++){
    char y=t.charAt(j);
    if(hm.get(y)==null) return false;
    else {
        hm.put(y,hm.get(y)-1);
        if(hm.get(y)==0)hm.remove(y);
    }
}
return true;

    }
}

class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length()!=t.length())return false;
int[] arr=new int[26];
for(int i=0;i<s.length();i++){
    arr[s.charAt(i)-'a']+=1;
}
for(int j=0;j<s.length();j++){
    arr[t.charAt(j)-'a']-=1;
}
for(int y:arr){
    if (y!=0)return false;
}
return true;

    }
}
https://leetcode.com/problems/valid-anagram/
